{"componentChunkName":"component---src-templates-series-jsx","path":"/series/Why?-시리즈/","result":{"data":{"posts":{"nodes":[{"excerpt":"들어가며 흔히 Domain과 View는 분리해야 한다고 한다. 대표적인 디자인 패턴으로 MVC 패턴이 있다. 같이 작성하면 개발도 빨리 할 수 있고 코드 작성에도 편한데, 왜 분리하라고 할까? 결론 결론부터 말하자면, Domain 객체를 잦은 변경으로부터 보호하기 위해서이다. 왜 Domain을 보호해야 할까? 이를 알아보기 위해서는 우선 Domain이 무…","fields":{"slug":"/why-seperate-domain-and-view/"},"frontmatter":{"date":"December 04, 2023","update":"Dec 04, 2023","title":"Domain과 View를 분리한다. 왜?","tags":["design-pattern","mvc-pattern","clean-code"]}},{"excerpt":"왜 값의 변경을 막아야 할까?  자동차 경주 피드백 중 하나이다. 왜 이런 피드백이 있는지 알아보자 final 키워드를 붙이면 좋은 점 1. 변경 가능성을 최소화한다. 즉, 코드의 예측이 쉬워진다. 사실 알잘딱깔센으로 객체나 값의 변경은 정말 필요한 곳에서 필요한 만큼 수행해야 한다. 하지만 final 키워드를 붙이지 않으면 분명한 것은 변경 가능성이 존…","fields":{"slug":"/why-use-final/"},"frontmatter":{"date":"December 05, 2023","update":"Dec 05, 2023","title":"final 키워드를 사용해 값의 변경을 막아라. 왜?","tags":["java","clean-code"]}},{"excerpt":"우아한테크코스의 모든 미션에 \"배열 대신 컬렉션을 사용하라\"는 요구 사항이 항상 존재한다. 그 이유를 알아보자. 두 줄 요약 Java가 이미 잘 만들어놓은 JCF가 존재한다. 제네릭을 지원한다. JCF  Java는 다양한 자료구조와 다양한 알고리즘을 지원한다. 예를 들어 동적 배열은 , 연결 리스트는  처럼 말이다. 게다가 각 자료구조에 필요한 동작들, …","fields":{"slug":"/why-use-collection-instead-of-array/"},"frontmatter":{"date":"December 11, 2023","update":null,"title":"배열 대신 컬렉션을 쓴다. 왜?","tags":["java","clean-code"]}},{"excerpt":"세 줄 요약 코드의 가독성이 좋아진다.  코드를 객체지향으로 짤 수 있다. 따라서 유지보수가 쉽다. 원시값과 문자열을 포장하지 않았을 때 이 코드를 보고 파라미터로 넘어가는 각 값들이 어떤 값들인지 바로 파악할 수 있을까? 적어도 해당 프로젝트에 대한 이해도가 없다면 절대 불가능할 것이다. 물론 아래 코드처럼 각 파라미터를 변수로 할당하고 변수명으로 유추…","fields":{"slug":"/why-wrap-primitive-type-and-string/"},"frontmatter":{"date":"December 13, 2023","update":null,"title":"모든 원시값과 문자열을 포장한다. 왜?","tags":["java","oop","clean-code"]}}]}},"pageContext":{"series":"Why? 시리즈"}},"staticQueryHashes":[],"slicesMap":{}}