{"componentChunkName":"component---src-templates-post-jsx","path":"/compare-of-datetime-and-timestamp/","result":{"data":{"site":{"siteMetadata":{"title":"log4dh"}},"markdownRemark":{"id":"def28d41-907f-5432-8060-ed5429114882","excerpt":"들어가며 최근 개인 프로젝트를 시작하면서 ERD 설계를 진행했습니다. 이때, 작성 날짜나 시작 날짜 같은 날짜에 대한 값을 저장할 칼럼이 필요했고 해당 칼럼의 자료형을 결정하는 과정에서 DATETIME과 TIMESTAMP의 차이에 대해 궁금해졌습니다. 따라서 이 둘을 이해해보겠습니다. 기준은 MySQL 8.0 입니다. DATETIME과 TIMESTAMP의…","html":"<h2>들어가며</h2>\n<p>최근 개인 프로젝트를 시작하면서 ERD 설계를 진행했습니다.</p>\n<p>이때, 작성 날짜나 시작 날짜 같은 <strong>날짜</strong>에 대한 값을 저장할 칼럼이 필요했고 해당 칼럼의 자료형을 결정하는 과정에서 <strong>DATETIME과 TIMESTAMP의 차이에 대해 궁금해졌습니다.</strong></p>\n<p>따라서 이 둘을 이해해보겠습니다.</p>\n<blockquote>\n<p>기준은 MySQL 8.0 입니다.</p>\n</blockquote>\n<h2>DATETIME과 TIMESTAMP의 공통점</h2>\n<ul>\n<li>두 타입 모두 <strong>날짜와 시간을 표현합니다.</strong></li>\n<li>표현 형식은 <code class=\"language-text\">YYYY-MM-DD hh:mm:ss</code> 입니다.</li>\n<li>최대 6자리 정밀도의 소수점 초 부분이 포함될 수 있습니다.</li>\n<li>표현할 수 있는 범위의 차이 떄문에 약간 다른 점이 있습니다.</li>\n<li>DATETIME은 <code class=\"language-text\">1000-01-01 00:00:00.000000</code>부터 <code class=\"language-text\">9999-12-31 23:59:59.499999</code> 까지입니다.</li>\n<li>TIMESTAMP는 <code class=\"language-text\">1970-01-01 00:00:01.000000</code>부터 <code class=\"language-text\">2038-01-19 03:14:07.499999</code> 까지입니다.</li>\n<li>\n<p>자동으로 초기화하거나 현재의 날짜 및 시간으로 업데이트하는 기능을 제공합니다.</p>\n<ul>\n<li>예) <code class=\"language-text\">DEFAULT CURRENT_TIMESTAMP</code> or <code class=\"language-text\">ON UPDATE CURRENT_TIMESTAMP</code></li>\n</ul>\n</li>\n</ul>\n<h2>DATETIME과 TIMESTAMP의 차이점</h2>\n<h3>1. <strong>지원하는 값의 범위에 차이가 있습니다.</strong></h3>\n<ul>\n<li>DATETIME은 <code class=\"language-text\">1000-01-01 00:00:00</code> 부터 <code class=\"language-text\">9999-12-31 24:59:59</code> 까지입니다.</li>\n<li>TIMESTAMP는 <code class=\"language-text\">1970-01-01 00:00:01</code>UTC 부터 <code class=\"language-text\">2038-01-19 03:14:07</code>UTC 까지입니다.</li>\n</ul>\n<h3>2. <strong>Current Time Zone에 따라 UTC 값으로 변환해주는 작업에 차이가 있습니다.</strong></h3>\n<ul>\n<li>DATETIME은 작업을 지원하지 않습니다.</li>\n<li>\n<p>TIMESTAMP는 저장 혹은 검색 시에 변환해줍니다.</p>\n<ul>\n<li>즉, TIMESTAMP는 Time Zone 변화에 유연합니다.</li>\n<li>추가로 Session 별로 Time Zone을 설정할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3>3. <strong>값을 저장하는 공간의 크기에도 차이가 있습니다.</strong></h3>\n<ul>\n<li>DATETIME은 8 byte를 차지합니다.</li>\n<li>TIMESTAMP는 4 byte를 차지합니다.</li>\n</ul>\n<h2>결론</h2>\n<p>날짜와 시간까지 함께 저장해야하는 칼럼의 자료형은, 가급적 <strong>TIMESTAMP를 선택하는 것이 좋아보입니다.</strong></p>\n<p>저장 공간의 이점도 있을 뿐더러, 무엇보다 Time Zone에 따른 UTC 값으로 자동 변환해주는 작업의 유무에서 큰 차이가 있기 때문입니다.</p>\n<p>따라서 더 가볍고 유연한 테이블을 위해서는 DATETIME 보단 TIMESTAMP를 권장합니다.</p>\n<h2>번외: DATE 타입</h2>\n<ul>\n<li>시간없이 날짜에 대한 값만 지원합니다.</li>\n<li><code class=\"language-text\">YYYY-MM-DD</code> 형식으로 표현합니다.</li>\n<li>지원 범위는 <code class=\"language-text\">1000-01-01</code> 부터 <code class=\"language-text\">9999-12-31</code> 까지입니다.</li>\n</ul>\n<blockquote>\n<h3>Reference</h3>\n<ul>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\">https://dev.mysql.com/doc/refman/8.0/en/datetime.html</a></li>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html\">https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html</a></li>\n</ul>\n</blockquote>","frontmatter":{"title":"[MySQL] DATETIME vs TIMESTAMP","date":"January 10, 2024","update":null,"tags":["database","MySQL","DATETIME","TIMESTAMP"],"series":null},"fields":{"slug":"/compare-of-datetime-and-timestamp/","readingTime":{"minutes":3.065}}},"seriesList":{"edges":[{"node":{"id":"a30ff988-ea74-5562-b241-90fbff73a3da","fields":{"slug":"/kissoft-retrospection/"},"frontmatter":{"title":"키스소프트 현장실습 회고"}}},{"node":{"id":"3b94cbd6-f64a-5d82-96a2-0761602c250b","fields":{"slug":"/dbcp/"},"frontmatter":{"title":"DBCP와 HikariCP 이해하기"}}},{"node":{"id":"c418073e-50be-5fe1-807d-478c9c47f640","fields":{"slug":"/zero-downtime-deployment/"},"frontmatter":{"title":"무중단 배포 이해하기"}}},{"node":{"id":"c5760ea9-e137-5edf-8244-3a93e25b067b","fields":{"slug":"/unit-test/"},"frontmatter":{"title":"단위 테스트 이해하기"}}},{"node":{"id":"8ae82b3f-5b72-555c-89fe-9939dcf8377c","fields":{"slug":"/using-junit-and-assertJ/"},"frontmatter":{"title":"JUnit과 AssertJ 활용법"}}},{"node":{"id":"91a7a622-00f8-5cca-b6c1-e4f7db7ee31e","fields":{"slug":"/about-tdd/"},"frontmatter":{"title":"TDD 이해하기"}}},{"node":{"id":"10e0dab4-d2e7-52df-8daa-31bfef1b08b6","fields":{"slug":"/static-with-memory-structure/"},"frontmatter":{"title":"static을 더 잘 사용하기"}}},{"node":{"id":"c773b0a0-9610-5605-bdb9-9089df57f52b","fields":{"slug":"/about-garbage-collection/"},"frontmatter":{"title":"JVM의 Garbage Collection과 동작 원리"}}},{"node":{"id":"0bf99b61-98a4-5c40-b8ce-05a918d212f7","fields":{"slug":"/garbage-collection-tuning/"},"frontmatter":{"title":"Garbage Collection 튜닝에 대해"}}},{"node":{"id":"61bd95c2-424a-54c8-96d9-bec4c8a4f58c","fields":{"slug":"/garbage-collection-algorithms/"},"frontmatter":{"title":"Garbage Collection 알고리즘"}}},{"node":{"id":"c87443bb-4e35-55e7-94d5-a5cb70d2dbc8","fields":{"slug":"/cautions-for-using-collections-in-Java/"},"frontmatter":{"title":"Java에서 컬렉션을 사용할 때 주의할 점"}}},{"node":{"id":"c2d7615d-6232-5fce-8794-f4c790106bb5","fields":{"slug":"/2023-retrospection/"},"frontmatter":{"title":"2023년 회고록"}}},{"node":{"id":"def28d41-907f-5432-8060-ed5429114882","fields":{"slug":"/compare-of-datetime-and-timestamp/"},"frontmatter":{"title":"[MySQL] DATETIME vs TIMESTAMP"}}},{"node":{"id":"9bf8ca89-e021-526b-a7b5-2cce0b1e366f","fields":{"slug":"/add-feat-and-issue-number-automatically/"},"frontmatter":{"title":"[git&github] IntelliJ에서 커밋 메시지 작성 시, 자동으로 커밋 타입과 이슈 번호 추가하기"}}},{"node":{"id":"01318426-7520-5a57-92ff-c917e1483247","fields":{"slug":"/difference-of-controller-and-restcontroller/"},"frontmatter":{"title":"[Spring] @Controller와 @RestController 비교하기"}}},{"node":{"id":"bc68fa05-ec4a-5e12-a9b8-4e58769887df","fields":{"slug":"/deploy-spring-boot-in-aws-ec2-manually/"},"frontmatter":{"title":"[Infra] AWS EC2에 Spring Boot 수작업으로 배포하기"}}}]},"previous":{"fields":{"slug":"/05-transaction-and-lock/"},"frontmatter":{"title":"MySQL에서의 트랜잭션과 Lock"}},"next":{"fields":{"slug":"/05-isolation-level-of-MySQL/"},"frontmatter":{"title":"MySQL의 격리 수준"}}},"pageContext":{"id":"def28d41-907f-5432-8060-ed5429114882","series":null,"previousPostId":"076df81f-9afd-5dfe-bc33-fff6402d1ddc","nextPostId":"c1af5fc8-26e9-523f-ab94-cd74c7a9f8b5"}},"staticQueryHashes":[],"slicesMap":{}}